Vue.js Â∞àÈ°åÊû∂Êßã  Â¢ûÂä†Áâ©‰ª∂ÈáçÊñ∞Êï¥ÁêÜ‰∏çÊúÉÊ∂àÂ§±Áâ©‰ª∂ÁÆ°ÁêÜÁ≥ªÁµ±

Á∂≤ÂùÄ: https://aquamarine-meerkat-6961ca.netlify.app/

Â∞àÈ°å‰∏ªË¶ÅÂäüËÉΩÊ®°ÁµÑ
ÂâçÁ´ØÊ°ÜÊû∂ÔºöVue 3 + Vite
Ê®£ÂºèÊ°ÜÊû∂ÔºöTailwind CSS
‰∏ªË¶ÅÂäüËÉΩÔºöÊñ∞Â¢û„ÄÅÁ∑®ËºØ„ÄÅÂà™Èô§„ÄÅÊêúÂ∞ãÁâ©‰ª∂
Ë≥áÊñôÂ≠òÊîæÔºöÂâçÁ´ØÊö´Â≠ò (ÂèØÂª∂‰º∏‰∏≤Êé•ÂæåÁ´Ø API)
‰ªãÈù¢Ë®≠Ë®àÔºöÂç°ÁâáÂºèÂΩ©Ëâ≤ UIÔºåÊîØÊè¥Ëá™ÂãïÊèõË°å

Â∞àÊ°àÁõÆÈåÑÔºö
src/
 ‚îú‚îÄ‚îÄ App.vue (‰∏ª‰ªãÈù¢)
 ‚îú‚îÄ‚îÄ main.js (ÂÖ•Âè£Ê™îÊ°à)
 ‚îú‚îÄ‚îÄ main.css 
 ‚îú‚îÄ‚îÄ store.js 
 ‚îú‚îÄ‚îÄ assets/ (Ë≥áÊ∫êË≥áÊñôÂ§æ)
 ‚îú‚îÄ‚îÄ components/
      ‚îú‚îÄ‚îÄ ObjectList.vue (Áâ©‰ª∂Ê∏ÖÂñÆ)
      ‚îú‚îÄ‚îÄ ObjectForm.vue (Êñ∞Â¢û/Á∑®ËºØË°®ÂñÆ)
 ‚îú‚îÄ‚îÄ styles.css (Tailwind Ë®≠ÂÆö)
 ‚îú‚îÄ‚îÄ styles.css (Tailwind Ë®≠ÂÆö)
 ‚îú‚îÄ‚îÄ styles.css (Tailwind Ë®≠ÂÆö)
 ‚îú‚îÄ‚îÄ styles.css (Tailwind Ë®≠ÂÆö)
 ‚îú‚îÄ‚îÄ styles.css (Tailwind Ë®≠ÂÆö)

Ê†∏ÂøÉÂäüËÉΩÔºö
Áâ©‰ª∂Êñ∞Â¢ûÔºöËº∏ÂÖ•ÂêçÁ®±ËàáÊèèËø∞
Áâ©‰ª∂Á∑®ËºØÔºö‰øÆÊîπÊó¢ÊúâÁâ©‰ª∂Ë≥áË®ä
Áâ©‰ª∂Âà™Èô§ÔºöÁßªÈô§ÊåáÂÆöÁâ©‰ª∂
Áâ©‰ª∂ÊêúÂ∞ãÔºö‰æùÂêçÁ®±Âç≥ÊôÇÁØ©ÈÅ∏
‰ªãÈù¢ÁæéÂåñÔºöÂΩ©Ëâ≤Âç°ÁâáÔºåËá™ÂãïÊèõË°åÔºåÈôêÂà∂Ë°åÊï∏

------------------------------------------------------------------------

Â∞àÈ°åÈúÄÊ±ÇË®≠ÂÆö

ÂÅáË®≠‰Ω†ÁöÑÂ∞àÈ°åÊòØ„ÄåÁâ©‰ª∂ÁÆ°ÁêÜÁ≥ªÁµ±„ÄçÔºåÂäüËÉΩÈúÄÊ±ÇÂèØ‰ª•ÂÖàÁ∞°ÂñÆÂÆöÁæ©Ôºö

È°ØÁ§∫Áâ©‰ª∂ÂàóË°®

Êñ∞Â¢ûÁâ©‰ª∂

Á∑®ËºØÁâ©‰ª∂

Âà™Èô§Áâ©‰ª∂

ÂèØ‰ª•Â≠òË≥áÊñôÂà∞Êú¨Âú∞ÔºàÂàùÊúü‰ΩøÁî® LocalStorage Ê®°Êì¨Ë≥áÊñôÂ∫´Ôºâ


- id (Ëá™ÂãïÁî¢Áîü)
- ÂêçÁ®±
- È°ûÂà•
- ÊèèËø∞
- Êï∏Èáè

Ê≠•È©ü 1ÔºöÂª∫Á´ãÂ∞àÊ°à

ÂÆâË£ù Node.jsÔºàÂª∫Ë≠∞ 18 ‰ª•‰∏äÔºâ

ÈñãÂïüÁµÇÁ´ØÊ©üÔºåÂª∫Á´ã Vue 3 Â∞àÊ°àÔºö


npm create vite@latest vue-object-project

ÈÅ∏ÊìáÔºö

Project name: vue-object-project

Framework: Vue

yes

yes

Variant: Vue 3 + JavaScriptÔºàÊàñ TypeScriptÔºâ

ÈÄ≤ÂÖ•Ë≥áÊñôÂ§æ‰∏¶ÂÆâË£ùÂ•ó‰ª∂Ôºö

cd vue-object-project
npm install

npm run dev

ÊâìÈñãÁÄèË¶ΩÂô®ÔºåÊáâË©≤ÂèØ‰ª•ÁúãÂà∞ Vite ÁöÑÈ†êË®≠È†ÅÈù¢„ÄÇ


ChatGPT Ë™™Ôºö

Â§™Â•Ω‰∫ÜÔºÅÊàëÂÄëÂèØ‰ª•Âú®ÁèæÊúâÁâ©‰ª∂ÁÆ°ÁêÜÁ≥ªÁµ±Âü∫Á§é‰∏äÔºåÂä†‰∏äÊéíÁâàÁæéÂåñËàáÈÄ≤ÈöéÂäüËÉΩÔºåËÆìÈ†ÅÈù¢Êõ¥ÂÉèÂ∞àÈ°å‰ΩúÂìÅ„ÄÇ

ÊàëÂª∫Ë≠∞Áî® Tailwind CSS ÂÅöÂâçÁ´ØÊ®£ÂºèÂø´ÈÄüÁæéÂåñÔºå‰∏¶Âä†‰∏äÔºö

Âç°ÁâáÂàóË°®ÊàñÊºÇ‰∫ÆË°®Ê†º

ÊêúÂ∞ã/ÁØ©ÈÅ∏Áâ©‰ª∂

ÂàÜÈ†ÅÔºàÂèØÈÅ∏ÔºåË≥áÊñôÂ∞ëÂèØ‰ª•ÂÖà‰∏çÂÅöÔºâ

ÊåâÈàï„ÄÅË°®ÂñÆÊ®£ÂºèÁæéÂåñ

Á∞°ÂñÆÈ°èËâ≤„ÄÅÈñìË∑ùË™øÊï¥

npm install -D tailwindcss @tailwindcss/postcss postcss
npm install -D tailwindcss postcss autoprefixer
npm install -D tailwindcss@latest @tailwindcss/postcss@latest postcss@latest autoprefixer@latest

ÊúÉÁîüÊàêÔºö

tailwind.config.js

postcss.config.js

----------------------------------------------------------
Âú® src/main.cssÔºàÂ¶ÇÊûúÊ≤íÊúâÂ∞±Êñ∞Âª∫ÔºâÔºö

@tailwind base;
@tailwind components;
@tailwind utilities;

----------------------------------------------------------

src/main.js

import { createApp } from "vue";
import App from "./App.vue";
import "./main.css";

createApp(App).mount("#app");


----------------------------------------------------------

style.css

:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

.card {
  padding: 2em;
}

#app {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}



---------------------------------------------------------

vite.config.js

import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'

// https://vite.dev/config/
export default defineConfig({
  plugins: [vue()],
})

----------------------------------------------------------


src/store.js

import { reactive } from "vue";

export const store = reactive({
  objects: JSON.parse(localStorage.getItem("objects")) || [],

  addObject(obj) {
    obj.id = Date.now();
    this.objects.push(obj);
    this.save();
  },

  updateObject(updatedObj) {
    const index = this.objects.findIndex((o) => o.id === updatedObj.id);
    if (index !== -1) {
      this.objects[index] = updatedObj;
      this.save();
    }
  },

  deleteObject(id) {
    this.objects = this.objects.filter((o) => o.id !== id);
    this.save();
  },

  save() {
    localStorage.setItem("objects", JSON.stringify(this.objects));
  },
});


----------------------------------------------------------

App.vue

<template>
  <div id="app" class="app-container">
    <h1 class="title">Áâ©‰ª∂ÁÆ°ÁêÜÁ≥ªÁµ±</h1>
    <ObjectList />
  </div>
</template>

<script>
import ObjectList from './components/ObjectList.vue'

export default {
  name: 'App',
  components: { ObjectList }
}
</script>

<style>
.app-container {
  min-height: 100vh;
  background: linear-gradient(to right, #3a7bd5, #00d2ff); /* ËóçËâ≤Êº∏Â±§ */
  padding: 40px;
  box-sizing: border-box;
}

.title {
  text-align: center;
  color: #fff;
  font-size: 32px;
  margin-bottom: 30px;
  font-weight: bold;
}
</style>




---------------------------------------------------

ObjectForm.vue

<template>
  <div class="form-card">
    <h3>{{ editItem ? '‚úèÔ∏è Á∑®ËºØÁâ©‰ª∂' : '‚ûï Êñ∞Â¢ûÁâ©‰ª∂' }}</h3>
    <form @submit.prevent="handleSubmit">
      <label>ÂêçÁ®±Ôºö</label>
      <input v-model="form.name" required class="input-box" />

      <label>ÊèèËø∞Ôºö</label>
      <textarea v-model="form.description" required class="input-box"></textarea>

      <div class="form-actions">
        <button type="submit" class="btn btn-green">üíæ ÂÑ≤Â≠ò</button>
        <button type="button" @click="$emit('cancel')" class="btn btn-red">‚ùå ÂèñÊ∂à</button>
      </div>
    </form>
  </div>
</template>

<script>
export default {
  name: 'ObjectForm',
  props: ['editItem'],
  data() {
    return {
      form: this.editItem ? { ...this.editItem } : { name: '', description: '' }
    }
  },
  watch: {
    editItem: {
      immediate: true,
      handler(newVal) {
        this.form = newVal ? { ...newVal } : { name: '', description: '' }
      }
    }
  },
  methods: {
    handleSubmit() {
      this.$emit('save', this.form)
    }
  }
}
</script>

<style>
.form-card {
  background: #f8f9fa;
  padding: 20px;
  margin-bottom: 20px;
  border-radius: 12px;
  box-shadow: 0 3px 10px rgba(0,0,0,0.2);
}

h3 {
  margin-bottom: 15px;
  color: #333;
}

.input-box {
  width: 100%;
  padding: 10px;
  margin-bottom: 12px;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-size: 15px;
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
}
</style>





---------------------------------------------------

ObjectList.vue

<template>
  <div class="list-container">
    <div class="top-bar">
      <input 
        v-model="search" 
        placeholder="üîç ÊêúÂ∞ãÁâ©‰ª∂" 
        class="search-box"
      />
      <button @click="toggleForm" class="btn btn-green">
        ‚ûï Êñ∞Â¢ûÁâ©‰ª∂
      </button>
    </div>

    <!-- Ë°®ÂñÆ -->
    <ObjectForm 
      v-if="showForm" 
      :editItem="editItem" 
      @save="saveObject" 
      @cancel="cancelForm"
    />

    <!-- Áâ©‰ª∂ÂàóË°® -->
    <div class="card-list">
      <div v-for="(obj, index) in filteredObjects" :key="index" class="card">
        <p><strong>ÂêçÁ®±Ôºö</strong>{{ obj.name }}</p>
        <p><strong>ÊèèËø∞Ôºö</strong>{{ obj.description }}</p>
        <div class="actions">
          <button @click="editObject(index)" class="btn btn-blue">‚úèÔ∏è Á∑®ËºØ</button>
          <button @click="deleteObject(index)" class="btn btn-red">üóë Âà™Èô§</button>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import ObjectForm from './ObjectForm.vue'

export default {
  name: 'ObjectList',
  components: { ObjectForm },
  data() {
    return {
      objects: JSON.parse(localStorage.getItem('objects')) || [],
      search: '',
      showForm: false,
      editIndex: null,
      editItem: null
    }
  },
  computed: {
    filteredObjects() {
      return this.objects.filter(obj =>
        obj.name.toLowerCase().includes(this.search.toLowerCase())
      )
    }
  },
  methods: {
    toggleForm() {
      this.showForm = true
      this.editItem = null
      this.editIndex = null
    },
    saveObject(obj) {
      if (this.editIndex !== null) {
        this.objects[this.editIndex] = obj
      } else {
        this.objects.push(obj)
      }
      this.updateStorage()
      this.showForm = false
    },
    editObject(index) {
      this.editItem = { ...this.objects[index] }
      this.editIndex = index
      this.showForm = true
    },
    deleteObject(index) {
      this.objects.splice(index, 1)
      this.updateStorage()
    },
    cancelForm() {
      this.showForm = false
      this.editItem = null
      this.editIndex = null
    },
    updateStorage() {
      localStorage.setItem('objects', JSON.stringify(this.objects))
    }
  }
}
</script>

<style>
.list-container {
  max-width: 800px;
  margin: 0 auto;
  background: #ffffffcc;
  padding: 20px;
  border-radius: 16px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.2);
}

.top-bar {
  display: flex;
  justify-content: space-between;
  margin-bottom: 20px;
}

.search-box {
  flex: 1;
  padding: 10px;
  border: 2px solid #3a7bd5;
  border-radius: 8px;
  margin-right: 10px;
  font-size: 16px;
}

.card-list {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 15px;
}

.card {
  background: #fff;
  border-radius: 12px;
  padding: 15px;
  box-shadow: 0 3px 8px rgba(0,0,0,0.15);
}

.actions {
  display: flex;
  justify-content: space-between;
  margin-top: 10px;
}

.btn {
  padding: 8px 12px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  color: white;
  font-weight: bold;
  transition: transform 0.2s;
}
.btn:hover {
  transform: scale(1.05);
}
.btn-green {
  background: #28a745;
}
.btn-blue {
  background: #007bff;
}
.btn-red {
  background: #dc3545;
}
</style>




------------------------------------------------

tailwind.config.cjs


/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{vue,js,ts}"
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}


-------------------------------------------------------

postcss.config.cjs


module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  }
}

-------------------------------------------------------

src/main.js

import { createApp } from 'vue'
import App from './App.vue'
import './main.css'   // <-- ÂºïÂÖ• Tailwind CSS

createApp(App).mount('#app')


-------------------------------------------------------

package.json

{
  "name": "vue-object-project",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "vue": "^3.5.21"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4.1.13",
    "@vitejs/plugin-vue": "^6.0.1",
    "autoprefixer": "^10.4.21",
    "postcss": "^8.5.6",
    "tailwindcss": "^4.1.13",
    "vite": "npm:rolldown-vite@7.1.12"
  },
  "overrides": {
    "vite": "npm:rolldown-vite@7.1.12"
  }
}


-------------------------------------------------------


‰Ω†ÈÄôÂÄãÂ∞àÊ°àÊòØ Vue 3 + Vite Êû∂ÊßãÔºåÊâÄ‰ª•Ë¶ÅÊâìÂåÖËº∏Âá∫ÈùúÊÖãÁ∂≤È†ÅÂà∞‰∏ÄÂÄãË≥áÊñôÂ§æÔºåÂè™Ë¶ÅÁî® Vite ÁöÑ build Êåá‰ª§Ôºö

npm run build

Âü∑Ë°åÂæåÊµÅÁ®ãÔºö

ÊúÉÂú®Â∞àÊ°àÊ†πÁõÆÈåÑÁîüÊàê‰∏ÄÂÄã dist/ Ë≥áÊñôÂ§æ„ÄÇ

Ë£°Èù¢ÂåÖÂê´ index.html„ÄÅÂ£ìÁ∏ÆÈÅéÁöÑ JS„ÄÅCSS Ê™îÊ°à„ÄÇ

ÈÄôÂ∞±ÊòØÂèØ‰ª•Áõ¥Êé•‰∏üÂà∞Á∂≤Á´ô‰º∫ÊúçÂô®Ôºà‰æãÂ¶Ç Nginx„ÄÅApache„ÄÅGitHub PagesÔºâÁöÑÊ™îÊ°à„ÄÇ

Â¶ÇÊûúÊÉ≥Âú®Êú¨Âú∞Ê∏¨Ë©¶ÊâìÂåÖÂæåÁöÑÁ∂≤Á´ôÔºö

npm run preview


È†êË®≠ÊúÉÈñãÂú® http://localhost:4173„ÄÇ

ÈÉ®ÁΩ≤ÊñπÂºè

‰∏ÄËà¨Á∂≤È†Å‰º∫ÊúçÂô® (Apache / Nginx) ‚Üí Êää dist/ Êï¥ÂåÖ‰∏äÂÇ≥Âà∞‰º∫ÊúçÂô®Âç≥ÂèØ„ÄÇ

GitHub Pages ‚Üí ÂèØ‰ª•Áî® gh-pages Â•ó‰ª∂ÈÉ®ÁΩ≤ÔºåÊàñÁõ¥Êé•‰∏ü dist/ Âà∞ gh-pages ÂàÜÊîØ„ÄÇ

Netlify / Vercel ‚Üí Âú®Âª∫ÁΩÆË®≠ÂÆöËº∏ÂÖ• npm run buildÔºåÁôº‰ΩàË≥áÊñôÂ§æË®≠ dist„ÄÇ

-------------------------------------------------------

Âü∑Ë°åÁ®ãÂºèÊåá‰ª§ 

npm run dev

Á∂≤ÂùÄ: https://subtle-axolotl-2e4d31.netlify.app/


